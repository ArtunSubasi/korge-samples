group 'com.soywiz'
version "$korVersion"

apply plugin: 'java'
apply plugin: 'kotlin2js'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: "korge"

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

sourceCompatibility = 1.7
targetCompatibility = 1.7

kotlin { experimental { coroutines 'enable' } }

repositories {
	mavenLocal()
	mavenCentral()
}

sourceSets {
	main.java.srcDirs = ['src']
	test.java.srcDirs = ['test']
	main.resources.srcDirs = ['resources']
	test.resources.srcDirs = ['testresources']
	main.java.srcDirs += 'src/main/kotlin'
}

dependencies {
	compile "com.soywiz:korio-common:$korVersion"
	compile "com.soywiz:korim-common:$korVersion"
	compile "com.soywiz:korag-common:$korVersion"
	compile "com.soywiz:korau-common:$korVersion"
	compile "com.soywiz:korui-common:$korVersion"
	testCompile "org.jetbrains.kotlin:kotlin-test-js:1.2.0-beta-31"
	//compile "com.soywiz:korte:$korVersion"
	//testCompile group: 'junit', name: 'junit', version: '4.11'
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
}

task javadoc2(type: Javadoc) {
	failOnError = false
}

task javadocJar(type: Jar, dependsOn: javadoc2) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

artifacts {
	archives jar
	archives javadocJar
	archives sourcesJar
}

task deploy(dependsOn: ['install', 'uploadArchives']) {
}

